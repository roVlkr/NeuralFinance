<Window x:Class="NeuralFinance.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NeuralFinance"
        xmlns:diagram="clr-namespace:NeuralFinance.View.DiagramControls"
        xmlns:view="clr-namespace:NeuralFinance.View"
        xmlns:viewmodel="clr-namespace:NeuralFinance.ViewModel"
        xmlns:converters="clr-namespace:NeuralFinance.ViewModel.ValueConverters"
        xmlns:trainingfactories="clr-namespace:NeuralFinance.ViewModel.TrainingFactories"
        xmlns:helper="clr-namespace:NeuralFinance.ViewModel.Helper"
        xmlns:validation="clr-namespace:NeuralFinance.ViewModel.Validation"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        mc:Ignorable="d"
        Title="{Binding ElementName=mainTabControl, Path=SelectedItem.Header, StringFormat={}NeuralFinance - {0}}"
        Height="500" Width="1000">

    <!-- Get the ViewModel as resources -->
    <Window.Resources>
        <viewmodel:TrainingVM x:Key="training"/>
        <viewmodel:NetworkVM x:Key="network"/>
        <viewmodel:DataVM x:Key="data"/>
        <viewmodel:AnalyticsVM x:Key="analytics"/>
        <viewmodel:UserVM x:Key="user"/>

        <converters:BooleanToStringConverter x:Key="booleanToString"
                                             TrueValue="Stoppe Training"
                                             FalseValue="Starte Training"/>
        <converters:ActivationToStringConverter x:Key="activationToString"/>
        <BooleanToVisibilityConverter x:Key="boolToVisibility"/>

        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="5"/>
            <EventSetter Event="GotKeyboardFocus" Handler="TextBox_GotKeyboardFocus" />
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="TextBox_PreviewMouseLeftButtonDown"/>

            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Padding" Value="5"/>
        </Style>
    </Window.Resources>

    <TabControl x:Name="mainTabControl">
        <TabItem x:Name="forecastTabItem"
                 Header="Prognose">
            <Grid Margin="10">
                <view:TabPageHeader Header="{Binding ElementName=forecastTabItem, Path=Header}"/>
            </Grid>
        </TabItem>

        <TabItem x:Name="trainingTabItem"
                 DataContext="{StaticResource training}"
                 Header="Training">

            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <view:TabPageHeader Grid.ColumnSpan="2"
                                    Header="{Binding ElementName=trainingTabItem, Path=Header}"/>

                <StackPanel Grid.Row="1"
                            HorizontalAlignment="Left">
                    <Button Content="{Binding TrainingRunning, Converter={StaticResource booleanToString}}"
                            Command="{Binding TrainingCommand}"
                            CommandParameter="{Binding Epochs}"
                            Margin="0 0 0 10"/>

                    <StackPanel Orientation="Horizontal">
                        <Label Content="Epochen:"
                               Margin="0 0 5 0"
                               FontSize="14"
                               VerticalAlignment="Center"/>
                        <TextBox MinWidth="200"
                                 Text="{Binding Epochs, Mode=TwoWay}"
                                 VerticalContentAlignment="Center"/>
                    </StackPanel>
                </StackPanel>

                <ProgressBar Grid.Row="1"
                             Grid.Column="1"
                             Height="20"
                             Margin="40 0 0 0"/>

                <ScrollViewer Grid.Row="2"
                              Grid.ColumnSpan="2"
                              Background="#f3f3f3"
                              VerticalScrollBarVisibility="Auto"
                              Margin="-10 10 -10 -10">
                    <Grid Margin="0 10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <diagram:TrackingDiagramControl
                            MinHeight="250"
                            DiagramName="Trainingsdaten"
                            Margin="25"/>

                        <diagram:TrackingDiagramControl
                            MinHeight="250"
                            DiagramName="Validierungsdaten"
                            Grid.Column="1"
                            Margin="25"/>

                        <diagram:TrackingDiagramControl
                            MinHeight="250"
                            DiagramName="Parameterverteilung"
                            Grid.ColumnSpan="2"
                            Grid.Row="1"
                            Margin="25"/>
                    </Grid>
                </ScrollViewer>
            </Grid>
        </TabItem>

        <TabItem x:Name="networkTabItem"
                 DataContext="{StaticResource network}"
                 Header="{StaticResource tabHeaderNetwork}"
                 Validation.Error="TextBox_Error">
            <TabItem.CommandBindings>
                <CommandBinding Command="{x:Static viewmodel:NetworkVM.InitializeNetworkCommand}"
                                CanExecute="InitializeNetworkCommand_CanExecute"
                                Executed="InitializeNetworkCommand_Executed"/>
            </TabItem.CommandBindings>

            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <view:TabPageHeader Grid.ColumnSpan="2"
                                    Header="{Binding ElementName=networkTabItem, Path=Header}"/>

                <Label Content="Aufbau (Input- und Hidden-Layer):"
                       FontSize="14"
                       Grid.Row="1"
                       HorizontalAlignment="Right"
                       Margin="0 0 10 0"
                       VerticalAlignment="Center"/>

                <!-- Net structure -->
                <StackPanel x:Name="netStructureStackPanel"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="1">

                    <ItemsControl ItemsSource="{Binding NetStructure}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBox Width="30"
                                         Height="30"
                                         VerticalContentAlignment="Center"
                                         HorizontalContentAlignment="Center"
                                         Margin="0 0 10 0">
                                    <TextBox.Resources>
                                        <helper:BindingProxy x:Key="dataContextProxy" Data="{Binding}"/>
                                        <helper:TypeDependencyWrapper x:Key="valueType"
                                                                      Type="{Binding Data.ValueType, Source={StaticResource dataContextProxy}}"/>
                                    </TextBox.Resources>

                                    <TextBox.Text>
                                        <Binding Path="Value" NotifyOnValidationError="True">
                                            <Binding.Converter>
                                                <converters:NumberToStringConverter NumberTypeWrapper="{StaticResource valueType}"/>
                                            </Binding.Converter>

                                            <Binding.ValidationRules>
                                                <validation:NumberValidationRule NumberTypeWrapper="{StaticResource valueType}"/>
                                                <NotifyDataErrorValidationRule/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <view:AddRemoveBox AddCommand="{Binding AddTextBoxCommand}"
                                       RemoveCommand="{Binding RemoveTextBoxCommand}"/>
                </StackPanel>

                <Label Content="Aktivierungsfunktion:"
                       FontSize="14"
                       Grid.Row="2"
                       HorizontalAlignment="Right"
                       Margin="0 0 10 0"
                       VerticalAlignment="Center"/>

                <ComboBox ItemsSource="{Binding Source={x:Static viewmodel:NetworkVM.ActivationFunctions}}"
                          SelectedValue="{Binding ActivationFunction}"
                          Grid.Row="2"
                          Grid.Column="1"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          SelectedIndex="0">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource activationToString}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <Label Content="Optimierer:"
                       FontSize="14"
                       Grid.Row="3"
                       HorizontalAlignment="Right"
                       Margin="0 0 10 0"
                       VerticalAlignment="Center"/>

                <ComboBox x:Name="optimizerComboBox"
                          ItemsSource="{Binding Source={x:Static trainingfactories:TrainingFactoryArgs.Templates}, Path=Values}"
                          DisplayMemberPath="Name"
                          SelectedItem="{Binding Optimizer}"
                          Grid.Row="3"
                          Grid.Column="1"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          SelectedIndex="0"/>

                <GroupBox DataContext="{Binding Optimizer}"
                          Grid.Row="4" Grid.ColumnSpan="2"
                          Padding="10"
                          Header="{Binding Name}"
                          HeaderStringFormat="Einstellungen: {0}-Optimierer">

                    <ItemsControl ItemsSource="{Binding Parameters}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="10"
                                            Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <helper:BindingProxy x:Key="dataContextProxy" Data="{Binding}"/>
                                        <helper:TypeDependencyWrapper x:Key="valueType"
                                                                      Type="{Binding Data.ValueType, Source={StaticResource dataContextProxy}}"/>
                                    </StackPanel.Resources>

                                    <TextBlock Text="{Binding DisplayName, StringFormat={}{0}:}"
                                               Margin="0 0 10 0"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Center"/>

                                    <TextBox VerticalAlignment="Center"
                                             VerticalContentAlignment="Center">
                                        <TextBox.Text>
                                            <Binding Path="Value" NotifyOnValidationError="True">
                                                <Binding.Converter>
                                                    <converters:NumberToStringConverter NumberTypeWrapper="{StaticResource valueType}"/>
                                                </Binding.Converter>

                                                <Binding.ValidationRules>
                                                    <validation:NumberValidationRule NumberTypeWrapper="{StaticResource valueType}"/>
                                                    <NotifyDataErrorValidationRule/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </GroupBox>

                <Button Content="Netzwerk initialisieren"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Padding="5"
                        Margin="10"
                        Grid.Column="1"
                        Grid.Row="5"
                        Command="{x:Static viewmodel:NetworkVM.InitializeNetworkCommand}"/>
            </Grid>
        </TabItem>

        <TabItem x:Name="dataTabItem"
                 DataContext="{StaticResource data}"
                 Header="Daten">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                
                <view:TabPageHeader Header="{Binding ElementName=dataTabItem, Path=Header}"
                                    Margin="10"/>

                <Button Content="Daten holen"
                        Padding="5"
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Margin="0 0 10 10"
                        Command="{Binding Path=LoadDataFileCommand}"/>

                <Border Grid.Row="2">
                    <Label HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="16">
                        Keine Daten geladen.
                    </Label>
                </Border>

                <ScrollViewer Grid.Row="2"
                              Background="White"
                              Visibility="{Binding DataLoaded, Converter={StaticResource boolToVisibility}}">
                    <Grid Margin="10 10 10 50">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="400"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.ColumnSpan="2"
                                    Orientation="Horizontal">
                            <TextBlock Text="{Binding ChartTable.StockName, StringFormat={}Wertpapier: {0}}"
                                       Margin="0 0 20 0"/>
                            <TextBlock Text="{Binding ChartTable.WKN, StringFormat={}WKN: {0}}"
                                       Margin="0 0 20 0"/>
                            <TextBlock Text="{Binding ChartTable.Exchange, StringFormat={}Börse: {0}}"/>
                        </StackPanel>

                        <Border Background="#FAFAFA"
                                BorderBrush="LightGray"
                                BorderThickness="1"
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                Margin="0 20">
                            <diagram:DiagramControl Points="{Binding Chart.Data}"
                                                    Margin="50 40"
                                                    PreferredXIntervalCount="3"
                                                    PreferredYIntervalCount="4"
                                                    MaxPointsVisible="300"/>
                        </Border>

                        <TextBlock Text="Betrachtete Werte:"
                                   FontSize="14"
                                   Grid.Row="2"
                                   HorizontalAlignment="Right"
                                   Margin="0 0 10 0"
                                   VerticalAlignment="Center"/>

                        <ComboBox x:Name="columnNameComboBox"
                                  ItemsSource="{Binding ChartTable.ValueColumnNames}"
                                  SelectedItem="{Binding SelectedColumn}"
                                  Grid.Row="2"
                                  Grid.Column="1"
                                  HorizontalAlignment="Left"/>

                        <TextBlock Text="Trainingsdaten"
                                   Grid.Row="3"
                                   Grid.ColumnSpan="2"
                                   HorizontalAlignment="Left"
                                   FontSize="14"
                                   Margin="0 20 0 0"/>

                        <ItemsControl ItemsSource="{Binding TrainingRanges}"
                                      Grid.Row="4"
                                      Grid.ColumnSpan="2"
                                      HorizontalAlignment="Left">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="0 10 0 0">
                                        <TextBlock Text="Zeitraum:"
                                                   Margin="0 0 10 0"
                                                   VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding StartTime, ConverterCulture=de-DE}"/>
                                        <TextBlock Text="bis"
                                                   Margin="10 0"
                                                   VerticalAlignment="Center"/>
                                        <TextBox Text="{Binding StopTime,ConverterCulture=de-DE}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <view:AddRemoveBox Orientation="Horizontal"
                                           Grid.Row="4"
                                           Grid.Column="1"
                                           VerticalAlignment="Bottom"
                                           HorizontalAlignment="Right"
                                           AddCommand="{Binding AddTrainingRangeCommand}"
                                           RemoveCommand="{Binding RemoveTrainingRangeCommand}"/>

                        <Button Content="Daten verwenden"
                                Grid.Row="5"
                                Grid.Column="1"
                                Margin="0 50 0 0"
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Right"
                                Command="{Binding ConfirmDataCommand}"/>
                    </Grid>
                </ScrollViewer>
            </Grid>
        </TabItem>

        <TabItem DataContext="{StaticResource analytics}"
                 Header="Analyse">

        </TabItem>

        <TabItem DataContext="{StaticResource user}"
                 Header="Benutzer">

        </TabItem>
    </TabControl>
</Window>

